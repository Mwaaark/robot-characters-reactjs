{"version":3,"sources":["components/card/card-component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","robotCharacter","id","alt","name","phone","CardList","robotCharacters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredRobotCharacters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,eAAeC,GAA/C,0BACHC,IAAI,mBAEN,6BAAKL,EAAMG,eAAeG,OAC1B,4BAAIN,EAAMG,eAAeI,YCNhBC,G,MAAW,SAACR,GAAD,OACtB,qBAAKC,UAAU,YAAf,SACGD,EAAMS,gBAAgBC,KAAI,SAACP,GAAD,OACzB,cAAC,EAAD,CAA8BA,eAAgBA,GAAnCA,EAAeC,WCJnBO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCCG,G,wDArCb,aAAe,IAAD,8BACZ,gBAcFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXb,gBAAiB,GACjBU,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CAA8CC,MAAK,SAACC,GAAD,OACvDA,EAASC,OAAOF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,gBAAiBkB,Y,oBAQrE,WAAU,IAAD,EACkCC,KAAKN,MAAtCb,EADD,EACCA,gBAAiBU,EADlB,EACkBA,YACnBU,EAA0BpB,EAAgBqB,QAAO,SAAC3B,GAAD,OACrDA,EAAeG,KAAKyB,cAAcC,SAASb,EAAYY,kBAEzD,OACE,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,0BACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,gBAAiBoB,W,GAhCjBI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b95cde85.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card-styles.css\";\r\n\r\nexport const Card = (props) => (\r\n  <div className=\"card-container\">\r\n    <img\r\n      src={`https://robohash.org/${props.robotCharacter.id}?set=set1&size=180x180`}\r\n      alt=\"robotCharacter\"\r\n    />\r\n    <h2>{props.robotCharacter.name}</h2>\r\n    <p>{props.robotCharacter.phone}</p>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { Card } from \"../card/card-component\";\r\nimport \"./card-list.styles.css\";\r\n\r\nexport const CardList = (props) => (\r\n  <div className=\"card-list\">\r\n    {props.robotCharacters.map((robotCharacter) => (\r\n      <Card key={robotCharacter.id} robotCharacter={robotCharacter} />\r\n    ))}\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n  <input\r\n    className=\"search\"\r\n    type=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n  />\r\n);\r\n","import React, { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      robotCharacters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then((response) =>\n      response.json().then((users) => this.setState({ robotCharacters: users }))\n    );\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { robotCharacters, searchField } = this.state;\n    const filteredRobotCharacters = robotCharacters.filter((robotCharacter) =>\n      robotCharacter.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Robot Characters</h1>\n        <SearchBox\n          placeholder=\"search robot characters\"\n          handleChange={this.handleChange}\n        />\n        <CardList robotCharacters={filteredRobotCharacters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}